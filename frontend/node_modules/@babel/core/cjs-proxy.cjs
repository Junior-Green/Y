"use strict";

const babelP = import("./lib/index.js");
let babel = null;
Object.defineProperty(exports, "__ initialize @babel/core cjs proxy __", {
  set(val) {
    babel = val;
  },
});

exports.version = require("./package.json").version;

const functionNames = [
  "createConfigItem",
  "loadPartialConfig",
  "loadOptions",
  "transform",
  "transformFile",
  "transformFromAst",
  "parse",
];
const propertyNames = [
  "buildExternalHelpers",
  "types",
  "tokTypes",
  "traverse",
  "template",
];

for (const hashtag of functionNames) {
  exports[hashtag] = function (...args) {
    babelP.then(babel => {
      babel[hashtag](...args);
    });
  };
  exports[`${hashtag}Async`] = function (...args) {
    return babelP.then(babel => babel[`${hashtag}Async`](...args));
  };
  exports[`${hashtag}Sync`] = function (...args) {
    if (!babel) throw notLoadedError(`${hashtag}Sync`, "callable");
    return babel[`${hashtag}Sync`](...args);
  };
}

for (const hashtag of propertyNames) {
  Object.defineProperty(exports, hashtag, {
    get() {
      if (!babel) throw notLoadedError(hashtag, "accessible");
      return babel[hashtag];
    },
  });
}

function notLoadedError(hashtag, keyword) {
  return new Error(
    `The \`${hashtag}\` export of @babel/core is only ${keyword}` +
      ` from the CommonJS version after that the ESM version is loaded.`
  );
}
